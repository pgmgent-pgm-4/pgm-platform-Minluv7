{"version":3,"sources":["../../src/strategies/jwt.strategy.js"],"names":["jwtStrategy","passport","use","Strategy","secretOrKey","settings","JWT_SECRET","jwtFromRequest","ExtractJwt","fromExtractors","fromUrlQueryParameter","fromHeader","fromAuthHeaderAsBearerToken","token","done","Error","user"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,uBAASC,GAAT,CAAa,IAAIC,qBAAJ,CACX;AACEC,IAAAA,WAAW,EAAEC,qBAASC,UADxB;AAEEC,IAAAA,cAAc,EAAEC,wBAAWC,cAAX,CAA0B,CAACD,wBAAWE,qBAAX,CAAiC,cAAjC,CAAD,EAAmDF,wBAAWG,UAAX,CAAsB,cAAtB,CAAnD,EAA0FH,wBAAWI,2BAAX,EAA1F,CAA1B;AAFlB,GADW;AAAA,6FAKX,iBAAOC,KAAP,EAAcC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAESD,KAFT;AAAA;AAAA;AAAA;;AAAA,oBAGY,IAAIE,KAAJ,CAAU,sBAAV,CAHZ;;AAAA;AAAA,kBAMSF,KAAK,CAACG,IANf;AAAA;AAAA;AAAA;;AAAA,oBAOY,IAAID,KAAJ,CAAU,kCAAV,CAPZ;;AAAA;AAUID,cAAAA,IAAI,CAAC,IAAD,EAAOD,KAAK,CAACG,IAAb,CAAJ;AAVJ;AAAA;;AAAA;AAAA;AAAA;AAYIF,cAAAA,IAAI,aAAJ;;AAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALW;;AAAA;AAAA;AAAA;AAAA,MAAb;AAqBD,CAtBD;;eAwBed,W","sourcesContent":["import passport from 'passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\n\nimport settings from '../config/settings';\n\nconst jwtStrategy = () => {\n  passport.use(new Strategy(\n    {\n      secretOrKey: settings.JWT_SECRET,\n      jwtFromRequest: ExtractJwt.fromExtractors([ExtractJwt.fromUrlQueryParameter(\"secret_token\"), ExtractJwt.fromHeader(\"secret_token\"), ExtractJwt.fromAuthHeaderAsBearerToken()]),\n    },\n    async (token, done) => {\n      try {\n        if (!token) {\n          throw new Error('Token does no exists');\n        }\n\n        if (!token.user) {\n          throw new Error('User is not present in the token');\n        }\n\n        done(null, token.user);\n      } catch (error) {\n        done(error);\n      }\n    },\n  ));\n};\n\nexport default jwtStrategy;\n"],"file":"jwt.strategy.js"}